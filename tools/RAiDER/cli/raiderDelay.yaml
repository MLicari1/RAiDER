# vim: set filetype=yaml:
##------------------------ raiderDelay.cfg ------------------------##
## 
##  There are three basic options for calculating tropospheric delays: 
##  1. Calculate Zenith delays (ZTD; Default option if nothing else is passed)
##  2. Calculate slant delays (STD) by projecting ZTD using the incidence angle: 
##     STD = ZTD / cos(incidence_angle)
##  3. Calculate slant delays (STD) using raytracing: 
##     STD = 1e-6 * \int_H^{Top} N(l(x,y,z)) dl
##     where H is the ground pixel elevation, "Top" is the top of the troposphere, 
##     N is the refractivity (point-wise delay), and l is a ray which is traced  
##     from the ground pixel to the top of the troposphere. 
##
##  In addition, RAiDER supports a number of options for specifying query points, 
## heights, and different weather models. Full options are listed below. 

########## PARAMETERS
## Satellite look direction:
## Sentinel-1: right
## NISAR: left
look_dir: right

########## 1. Date
## REQUIRED: TRUE
## FORMATS: YYYYMMDD
## 
## Dates can be a single date, two dates that define a set of dates every day, or two dates with an interval
## These will be ignored in the case that date_list is specified
date_start:
date_end:
date_step:   # date interval to download. Default is 1, i.e. every day between date_start and date_end

## Alternatively, you can also directly specify a comma-delimited list. 
date_list:   # e.g. [20200101, 20200201, 20200301]

########## 1. Time UTC
## REQUIRED: TRUE
## FORMATS: HH:MM:SS; HH:MM
##
## Time is in UTC time and should be specified as HH:MM:SS or HH:MM
time:

########## 2. Weather model
## REQUIRED: TRUE
## FORMATS: string, Select name from list below
## 
## Currently implemented weather models include: 
## ERA-5, ERA-5T, HRES, ERA-I, NCMR, HRRR, GMAO, MERRA-2
## See https://github.com/dbekaert/RAiDER/blob/10686ee3f3533a33ca0788d866003c363f58fd5e/WeatherModels.md 
## for more details and information on licensing
weather_model:

########## 3. Query points
## REQUIRED: FALSE
## FORMATS: string or list of floats
## 
## There are four options for specifying query points 
## 1. lat/lon raster files (such as those produced by the ISCE software)
## 2. A comma-delimited file (station_file) containing at least the columns Lat and Lon, and optionally Hgt_m
## 3. A bounding box in lat/lon specified as a space-separated list: South North West East
## 4. Use the lat/lon grid from a geocoded DEM or LOS file (Sections 4 and 5 below)
lat_file: 
lon_file: 
station_file: 
bounding_box: 

########## 4. Height info
## REQUIRED: FALSE
## FORMATS: None, string, list of floats
## 
##  Height information is used from one of the following possible sources: 
##  1. (Default for bounding box) Weather model height levels (model-specific)
##  2. (Default for lat/lon points) Copernicus 30m DEM (GLO-30), downloaded on the fly
##  3. Height file in radar coordinates matching lat/lon input files (Query points Option 1)
##  4. Georeferenced DEM
##    NOTE: If "use_dem_latlon" is set to true, then delays will be calculated at the DEM pixels.
##  5. List of height levels, which will be used for all input query points
dem: 
use_dem_latlon: False
height_levels: 

########## 5. Line-of-sight or zenith calculations
## REQUIRED: FALSE
## FORMATS: string
## 
## ZTD calculation: No additional inputs required
## STD calculation: 
ray_trace: False  # Use projected slant delay by default
zref: # Integration height. Only used in raytracing. 

# raster file in radar or geocoordinates
los_file: 
los_convention: isce  # can be "isce" or "hyp3", see *** for details

# NETCDF (HDF5?) file containing look vectors, see *** for details
los_cube: 

# File containing orbit statevectors, see *** for details 
orbit_file: 

########## 6. Run-time parameters
## REQUIRED: FALSE
##
verbose: True
raster_format: GTiff # Can be any rasterio-compatible format
output_directory: . # uses the runtime directory by default
weather_model_directory: # Defaults to <output directory>/weather_files/
output_projection:  # Specify the PROJ-compatible projection of the output delays as an EPSG code
